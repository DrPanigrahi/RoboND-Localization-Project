####################### Laser model parameters #######################
  laser_model_type: "likelihood_field_prob" # default "likelihood_field" Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled).
  laser_likelihood_max_dist: 2.0 # default 2.0 meters Maximum distance to do obstacle inflation on map, for use in likelihood_field model.
  laser_min_range: 0.5          # Minimum scan range to be considered; 
  laser_max_range: 10           # Maximum scan range to be considered; 
  laser_max_beams: 30           # How many evenly-spaced beams in each scan to be used when updating the filter.
  laser_z_hit:     0.99         # Mixture weight for the z_hit part of the model.
  laser_z_short:   0.1          # Mixture weight for the z_short part of the model.
  laser_z_max:     0.05         # Mixture weight for the z_max part of the model.
  laser_z_rand:    0.01         # Mixture weight for the z_rand part of the model.
  laser_sigma_hit: 0.2          # Standard deviation (in meters) for Gaussian model used in z_hit part of the model.
  laser_lambda_short: 0.1       # Exponential decay parameter for z_short part of model.
  
##################### Odometry model parameters ######################s
  odom_frame_id: "odom"         # Which frame to use for odometry.
  odom_model_type: "diff-corrected" # Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected".
  base_frame_id: "robot_footprint"  # Which frame to use for the robot base
  global_frame_id: "map"        # The name of the coordinate frame published by the localization system
  tf_broadcast: false            # Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame.
  odom_alpha1: 0.01            # Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion.
  odom_alpha2: 0.01            # Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion.
  odom_alpha3: 0.03            # Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion.
  odom_alpha4: 0.03            # Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion.

######################### Filter parameters #########################
  use_map_topic: true           # When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.
  min_particles: 25             
  max_particles: 250            
  kld_err: 0.01                 # Maximum error between the true distribution and the estimated distribution.
  kld_z: 0.99                   # Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err.
  #update_min_d: 0.05            # Translational movement required before performing a filter update.
  #update_min_a: 0.262           # Rotational movement (in radians) required before performing a filter update.
  transform_tolerance: 0.2      # Time (in sec) with which to post-date the transform that is published, to indicate that this transform is valid into the future.
  recovery_alpha_slow: 0.001    # Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001.
  recovery_alpha_fast: 0.1      # Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1.
  initial_pose_x: 0.0
  initial_pose_y: 0.0
  initial_pose_a: 0.0        